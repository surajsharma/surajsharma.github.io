---
import PageLayout from "@/layouts/Base";
import { Image } from "@astrojs/image/components";
import { clients } from "@/data/clients";

const exp_url =
	import.meta.env.MODE === "development"
		? import.meta.env.PUBLIC_FB_EXP_RTDB_URL
		: import.meta.env.FB_EXP_RTDB_URL;
---

<PageLayout meta={{ title: "Home" }}>
	<script is:inline src="/scripts/counter.js"></script>
	<script define:vars={{ exp_url }} type="module">
		const exp = document.getElementById("exp");
		let old = createFormattedNumberArray(exp.innerText);

		animateNumber(old, exp, old).then(async (res) => {
			if (res && res === 1) {
				await update();
				setInterval(update, 10000);
			}
		});

		async function update() {
			const ss = Date.now();

			let experience = await fetch("https://exphours-default-rtdb.europe-west1.firebasedatabase.app/experience.json" + "?ss=" + ss, {
				cache: "no-cache",
			})

			experience = await experience.json();

			const newExp = new Intl.NumberFormat("en-GB").format(experience);
			const value = createFormattedNumberArray(newExp);

			if (value.join("") == old.join("")) return;
			
			await animateNumber(value, exp, old);
			old = createFormattedNumberArray(newExp);
		}
	</script>
	<section class="flex-col" client:load>
		<div class="text-justify text-xl lowercase leading-relaxed">
			<p class="mb-10">
				<span class="inline-block">
					<span class="exp-counter">
						<span class="exp cursor-pointer" id="exp">10,000</span>
					</span>
				</span>
				<sup class="cursor-pointer font-semibold">+</sup> man-hours of experience in shipping pixel-perfect<span
					class="font-semibold"
				>
					frontends</span
				>, highly available <span class="text-xl font-semibold uppercase">API</span>s, scalable,
				secure <span class="text-xl font-semibold">(micro)services</span>, and <span
					class="text-xl font-semibold">performant operations</span
				> on the <span class="text-xl font-semibold">edge</span>, <span
					class="text-xl font-semibold">cloud</span
				>, and <span class="text-xl font-semibold">downstream</span>.
			</p>
			<p class="mb-4 text-xl lowercase leading-relaxed">
				email
				<a
					class="email font-semibold underline underline-offset-2"
					href="mailto:surajsharma@pm.me?subject=Hello%20Evenzero!&body=Hi%2C%0D%0A%0D%0APlease%20add%20your%20request%20for%20quote%20here.%0D%0A%0D%0A%0D%0Acheers!"
					>surajsharma@pm.me</a
				>
				for incredible, domain-agnostic, agile adventures in delivering <span class="font-semibold"
					>orders of magnitude better</span
				>, fault-tolerant, intuitive software.
			</p>
			<br />
		</div>
		<p class="text-lg lowercase">Global teams / governments served:</p>
		<section
			class="mt-10 grid grid-cols-2 place-items-center items-center gap-16 p-4 text-center md:scale-110 md:grid-cols-3 lg:gap-12"
		>
			{
				clients.map((client) => {
					if (!client.agency) {
						return (
							<a href={client.url} target="_blank">
								<Image
									class="tpl"
									height={client.img.height}
									width={client.img.width}
									src={client.img.import}
									alt={client.name}
								/>
							</a>
						);
					} else {
						if (client.clients?.length) {
							return (
								<>
									<a href={client.url} target="_blank">
										<Image
											class="tpl"
											height={client.img.height}
											width={client.img.width}
											src={client.img.import}
											alt={client.name}
										/>
									</a>
									{client.clients?.map((c) => {
										return (
											<a href={c.url} target="_blank">
												<Image
													class="tpl"
													height={c.img.height}
													width={client.img.width}
													src={c.img.import}
													alt={c.name}
												/>
											</a>
										);
									})}
								</>
							);
						}
					}
				})
			}
		</section>
	</section>
</PageLayout>
